"""
Django settings for mon_site_web project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
from django.utils.translation import gettext_lazy as _
import os
import ssl
from django.conf.locale.fr import formats as fr_formats

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOGSDIR = os.path.join(BASE_DIR, 'logs')
os.makedirs(LOGSDIR, exist_ok=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/django.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # Middleware pour i18n
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mon_site_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mon_site_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Europe/Paris'  # Timezone française

USE_I18N = True
USE_L10N = True  # Active la localisation automatique des dates/heures
USE_TZ = True

# Configuration des langues disponibles
LANGUAGES = [
    ('fr', 'Français'),
    ('en', 'Anglais'),
]

# Configuration des formats de date français
# Configuration des formats de dates et heures français
# Formats de dates français personnalisés
fr_formats.DATE_FORMAT = 'd F Y'  # Ex: 4 juin 2025
fr_formats.DATETIME_FORMAT = 'd F Y à H:i'  # Ex: 4 juin 2025 à 14:30
fr_formats.SHORT_DATE_FORMAT = 'd/m/Y'  # Ex: 04/06/2025
fr_formats.SHORT_DATETIME_FORMAT = 'd/m/Y H:i'  # Ex: 04/06/2025 14:30
fr_formats.TIME_FORMAT = 'H:i'  # Ex: 14:30

# Formats pour les inputs
fr_formats.DATE_INPUT_FORMATS = [
    '%d/%m/%Y', '%d-%m-%Y',  # 04/06/2025 ou 04-06-2025
    '%d/%m/%y', '%d-%m-%y',  # 04/06/25 ou 04-06-25
]

fr_formats.DATETIME_INPUT_FORMATS = [
    '%d/%m/%Y %H:%M:%S',  # 04/06/2025 14:30:00
    '%d/%m/%Y %H:%M',     # 04/06/2025 14:30
    '%d-%m-%Y %H:%M:%S',  # 04-06-2025 14:30:00
    '%d-%m-%Y %H:%M',     # 04-06-2025 14:30
]

# Jours de la semaine et mois en français (Django les gère automatiquement)
# mais on peut forcer certains comportements
FIRST_DAY_OF_WEEK = 1  # Lundi comme premier jour de la semaine

# Configuration des formats de date français
DATE_FORMAT = 'd F Y'  # Affichage complet : 4 juin 2025
DATETIME_FORMAT = 'd F Y à H:i'  # Avec heure : 4 juin 2025 à 14:30
SHORT_DATE_FORMAT = 'd/m/Y'  # Format court : 04/06/2025
SHORT_DATETIME_FORMAT = 'd/m/Y H:i'  # Format court avec heure : 04/06/2025 14:30

# Utiliser les formats personnalisés
USE_L10N = True

# Répertoire pour les fichiers de traduction
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration de l'authentification
LOGIN_URL = '/connexion/'  # URL vers laquelle rediriger les utilisateurs non connectés
LOGIN_REDIRECT_URL = '/'   # URL vers laquelle rediriger après connexion réussie
LOGOUT_REDIRECT_URL = '/'  # URL vers laquelle rediriger après déconnexion

# Configuration Email - Mailtrap pour le développement
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = False  # Désactiver TLS pour éviter les problèmes SSL
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = 'Blog Académique Universitaire <noreply@blog-universitaire.com>'
EMAIL_TIMEOUT = 60

# Configuration Google Gemini AI
GEMINI_API_KEY = config('GEMINI_API_KEY', default='')

